{"version":3,"sources":["CardName.js","StyleButton.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["CardName","props","_useState","useState","_useState2","Object","slicedToArray","editingName","setEditName","_useState3","name","_useState4","charName","setCharName","react_default","a","createElement","className","placeholder","onChange","e","target","value","autoFocus","defaultValue","onClick","saveName","title","StyleButton","_ref","string","type","btnStyle","change","stateStyle","concat","charAt","toUpperCase","slice","Card","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","rememberCard","id","weapon","state","style","getRandom","bind","assertThisInitialized","changeWeapon","changeStyle","filtered","data","filter","obj","description","getRandomInt","length","min","max","Math","floor","random","_this2","keys","removeCard","addCard","src_CardName","src_StyleButton","word","nonlethal","lethal","Component","require","App","cards","getCards","push","card","find","c","currentIndex","findIndex","localStorage","JSON","stringify","generateId","splice","parse","toString","substr","Fragment","map","src_Card_0","assign","key","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4lkFA4BeA,MA1Bf,SAAkBC,GAAO,IAAAC,EAEYC,oBAAS,GAFrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhBK,EAFgBH,EAAA,GAEHI,EAFGJ,EAAA,GAAAK,EAGSN,mBAASF,EAAMS,MAHxBC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGhBG,EAHgBD,EAAA,GAGNE,EAHMF,EAAA,GAUvB,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACZV,EACCO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,YAAY,aAAaC,SAAU,SAAAC,GAAC,OAAIP,EAAYO,EAAEC,OAAOC,QAAQC,WAAW,EAAMC,aAAcZ,IAClIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BQ,QAVhC,WACfxB,EAAMyB,SAASd,GACfJ,GAAY,KAQN,SAKFM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaU,MAAM,qBAAqBF,QAAS,kBAAMjB,GAAY,KAAQI,WCVjFgB,MAVf,SAAAC,GAA2D,IAYvCC,EAZEC,EAAqCF,EAArCE,KAAMC,EAA+BH,EAA/BG,SAAUC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,WAC5C,OACEpB,EAAAC,EAAAC,cAAA,OACEC,UAAS,aAAAkB,OAAeJ,EAAf,SAAAI,OAA2BH,EAA3B,KAAAG,OAAuCD,IAAeF,EAAW,gBAAkB,IAC5FL,MAAK,GAAAQ,QAQSL,EAROE,EASlBF,EAAOM,OAAO,GAAGC,cAAgBP,EAAOQ,MAAM,KARjDb,QAAS,kBAAMQ,EAAOD,WC0JbO,cA3Jb,SAAAA,EAAYtC,GAAO,IAAAuC,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,KAAAH,IACjBC,EAAAnC,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAAkC,GAAAM,KAAAH,KAAMzC,KA8CRyB,SAAW,SAAAhB,GACT8B,EAAKM,SAAS,CACZlC,SAAUF,IAEZ8B,EAAKvC,MAAM8C,aAAa,CACtBC,GAAIR,EAAKvC,MAAM+C,GACftC,OACAuC,OAAQT,EAAKU,MAAMD,OACnBE,MAAOX,EAAKU,MAAMC,SArDpBX,EAAKY,UAAYZ,EAAKY,UAAUC,KAAfhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAmC,KACjBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAmC,KACpBA,EAAKgB,YAAchB,EAAKgB,YAAYH,KAAjBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAmC,KAJFA,mFAQjBE,KAAKU,UAAUV,KAAKzC,MAAMgD,OAAQP,KAAKzC,MAAMkD,OAC7CT,KAAKI,SAAS,CACZlC,SAAU8B,KAAKzC,MAAMS,yCAGfuC,EAAQE,GAChB,IAAMM,EAAWf,KAAKzC,MAAMyD,KAAKC,OAC/B,SAAAC,GAAG,OAAIA,EAAI7B,OAASkB,GAAUW,EAAIT,QAAUA,IAGxCU,EAAcJ,EADRf,KAAKoB,aAAa,EAAGL,EAASM,OAAS,IAEnDrB,KAAKI,SAAS,CACZG,SACAE,QACAU,qDAGSG,EAAKC,GAChB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,wCAErCf,GACXP,KAAKU,UAAUH,EAAQP,KAAKQ,MAAMC,OAClCT,KAAKzC,MAAM8C,aAAa,CACtBC,GAAIN,KAAKzC,MAAM+C,GACftC,KAAMgC,KAAKQ,MAAMtC,SACjBqC,OAAQA,EACRE,MAAOT,KAAKQ,MAAMC,4CAGVA,GACVT,KAAKU,UAAUV,KAAKQ,MAAMD,OAAQE,GAClCT,KAAKzC,MAAM8C,aAAa,CACtBC,GAAIN,KAAKzC,MAAM+C,GACftC,KAAMgC,KAAKQ,MAAMtC,SACjBqC,OAAQP,KAAKQ,MAAMD,OACnBE,MAAOA,qCAgBF,IAAAkB,EAAA3B,KACP,OAAKA,KAAKQ,OAAS7C,OAAOiE,KAAK5B,KAAKQ,OAAOa,OAAS,EAAU,KAG5DjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,sBACVU,MAAM,mBACNF,QAAS,kBAAM4C,EAAKpE,MAAMsE,WAAWF,EAAKpE,MAAM+C,MAHlD,KAOAlC,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVU,MAAM,mBACNF,QAASiB,KAAKzC,MAAMuE,SAHtB,KAOA1D,EAAAC,EAAAC,cAACyD,EAAD,CAAU/C,SAAUgB,KAAKhB,SAAUhB,KAAMgC,KAAKzC,MAAMS,OACpDI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAC0D,EAAD,CACE3C,KAAK,SACLC,SAAS,QACTC,OAAQS,KAAKa,aACbrB,WAAYQ,KAAKQ,MAAMD,SAEzBnC,EAAAC,EAAAC,cAAC0D,EAAD,CACE3C,KAAK,SACLC,SAAS,WACTC,OAAQS,KAAKa,aACbrB,WAAYQ,KAAKQ,MAAMD,SAEzBnC,EAAAC,EAAAC,cAAC0D,EAAD,CACE3C,KAAK,SACLC,SAAS,WACTC,OAAQS,KAAKa,aACbrB,WAAYQ,KAAKQ,MAAMD,UAG3BnC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,oBAA0D,IAC1DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAC0D,EAAD,CACE3C,KAAK,QACLC,SAAS,QACTC,OAAQS,KAAKc,YACbtB,WAAYQ,KAAKQ,MAAMC,QAEzBrC,EAAAC,EAAAC,cAAC0D,EAAD,CACE3C,KAAK,QACLC,SAAS,UACTC,OAAQS,KAAKc,YACbtB,WAAYQ,KAAKQ,MAAMC,QAEzBrC,EAAAC,EAAAC,cAAC0D,EAAD,CACE3C,KAAK,QACLC,SAAS,QACTC,OAAQS,KAAKc,YACbtB,WAAYQ,KAAKQ,MAAMC,SAG3BrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,uBACVQ,QAAS,kBACP4C,EAAKjB,UAAUiB,EAAKnB,MAAMD,OAAQoB,EAAKnB,MAAMC,SAHjD,qBASFrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAA+BU,MAAM,cAC/Ce,KAAKQ,MAAMW,YACRnB,KAAKQ,MAAMW,YAAYc,KACvB,eAEN7D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAA8BU,MAAM,oBAC9Ce,KAAKQ,MAAMW,YACRnB,KAAKQ,MAAMW,YAAYe,UACvB,eAEN9D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BU,MAAM,eAC3Ce,KAAKQ,MAAMW,YACRnB,KAAKQ,MAAMW,YAAYgB,OACvB,yBAnJCC,aCDbpB,EAAOqB,EAAQ,IAsLNC,cAnLb,SAAAA,EAAY/E,GAAO,IAAAuC,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,KAAAsC,IACjBxC,EAAAnC,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAA2E,GAAAnC,KAAAH,KAAMzC,KACD8C,aAAeP,EAAKO,aAAaM,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAmC,KACpBA,EAAKgC,QAAUhC,EAAKgC,QAAQnB,KAAbhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAmC,KACfA,EAAK+B,WAAa/B,EAAK+B,WAAWlB,KAAhBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAmC,KAJDA,mFAQjB,IAAIyC,EAAQvC,KAAKwC,WACI,IAAjBD,EAAMlB,QACRkB,EAAME,KAAK,CACTzE,KAAM,uBACNuC,OAAQ,QACRE,MAAO,QACPH,GAAIiC,EAAMlB,OAAS,IAGvBrB,KAAKI,SAAS,CACZmC,+CAISG,GACX,IAAIH,EAAQvC,KAAKwC,WAEjB,GADkBD,EAAMI,KAAK,SAAAC,GAAC,OAAIA,EAAEtC,KAAOoC,EAAKpC,KAGzC,CACL,IAAIuC,EAAeN,EAAMO,UAAU,SAAAF,GAAC,OAAIA,EAAEtC,KAAOoC,EAAKpC,KACtDiC,EAAMM,GAAgBH,OAHtBH,EAAME,KAAKC,GAKbK,aAAaR,MAAQS,KAAKC,UAAUV,GACpCvC,KAAKI,SAAS,CACZmC,4CAKF,IAAIA,EAAQvC,KAAKwC,WACjBD,EAAME,KAAK,CACTzE,KAAM,uBACNuC,OAAQ,QACRE,MAAO,QACPH,GAAIN,KAAKkD,eAEXH,aAAaR,MAAQS,KAAKC,UAAUV,GACpCvC,KAAKI,SAAS,CACZmC,6CAIOjC,GACT,IAAIiC,EAAQvC,KAAKwC,WAEjB,GAAqB,IAAjBD,EAAMlB,OASR,OARAkB,EAAM,GAAGvE,KAAO,uBAChBuE,EAAM,GAAGhC,OAAS,QAClBgC,EAAM,GAAG9B,MAAQ,QACjB8B,EAAM,GAAGjC,GAAKN,KAAKkD,aACnBH,aAAaR,MAAQS,KAAKC,UAAUV,QACpCvC,KAAKI,SAAS,CACZmC,UAKJ,IAAIM,EAAeN,EAAMO,UAAU,SAAAF,GAAC,OAAIA,EAAEtC,KAAOA,IACjDiC,EAAMY,OAAON,EAAc,GAC3BE,aAAaR,MAAQS,KAAKC,UAAUV,GACpCvC,KAAKI,SAAS,CACZmC,6CAWF,OALKQ,aAAaR,MAGRS,KAAKI,MAAML,aAAaR,OAFxB,wCAQV,IAAIA,EAAQvC,KAAKwC,WACblC,EACF,IACAkB,KAAKE,SACF2B,SAAS,IACTC,OAAO,EAAG,GACf,OAAIf,EAAMI,KAAK,SAAAC,GAAC,OAAIA,EAAEtC,KAAOA,IACpBN,KAAKkD,aAEP5C,mCAGA,IAAAqB,EAAA3B,KACP,OAAKA,KAAKQ,OAAUR,KAAKQ,MAAM+B,MAE7BnE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkF,SAAA,KACEnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZyB,KAAKQ,MAAM+B,MAAMiB,IAAI,SAAAd,GAAI,OACxBtE,EAAAC,EAAAC,cAACmF,EAAD9F,OAAA+F,OAAA,CACEC,IAAKjB,EAAKpC,GACVU,KAAMA,GACF0B,EAHN,CAIErC,aAAcsB,EAAKtB,aACnByB,QAASH,EAAKG,QACdD,WAAYF,EAAKE,iBAIvBzD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAlB,gBAEEH,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVqF,KAAK,4CACL3E,MAAM,YAHR,YAFF,IAUEb,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVqF,KAAK,+CACL3E,MAAM,eAHR,eAVF,IAkBEb,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVqF,KAAK,2BACL3E,MAAM,WAHR,WAlBF,IA0BEb,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVqF,KAAK,sDACL3E,MAAM,sBAHR,sBA1BF,IAkCEb,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVqF,KAAK,yCACL3E,MAAM,SAHR,SAlCF,OA0CEb,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVqF,KAAK,4BACL3E,MAAM,YAHR,oBAOAb,EAAAC,EAAAC,cAAA,WAjDF,cAmDEF,EAAAC,EAAAC,cAAA,KACEC,UAAU,eACVqF,KAAK,8CACL3E,MAAM,0BACNN,OAAO,SACPkF,IAAI,uBALN,eAlEuC,YAnG/BzB,aCME0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhG,EAAAC,EAAAC,cAAC+F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.84cfb2bc.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction CardName(props) {\r\n  \r\n  const [editingName, setEditName] = useState(false);\r\n  const [charName, setCharName] = useState(props.name);\r\n\r\n  const saveName = () => {\r\n    props.saveName(charName);\r\n    setEditName(false);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"card__wrapper name-wrapper\">\r\n      {editingName ?\r\n        <div className=\"name-edit\">\r\n          <input className=\"name-input\" placeholder=\"Input name\" onChange={e => setCharName(e.target.value)} autoFocus={true} defaultValue={charName}/>\r\n          <div className=\"card__btn btn-save-name\" onClick={saveName}>\r\n            Save\r\n          </div>\r\n        </div>\r\n        :\r\n        <p className=\"card__name\" title=\"Click to edit name\" onClick={() => setEditName(true)}>{charName}</p>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardName;","import React from 'react';\r\n\r\nfunction StyleButton({type, btnStyle, change, stateStyle}) {\r\n  return (\r\n    <div\r\n      className={`card__btn ${type}-btn ${btnStyle} ${stateStyle === btnStyle ? 'btn--selected' : ''}`}\r\n      title={`${capitalize(btnStyle)}`}\r\n      onClick={() => change(btnStyle)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default StyleButton;\r\n\r\nfunction capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CardName from \"./CardName\";\r\nimport \"./Card.css\";\r\nimport StyleButton from \"./StyleButton\";\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getRandom = this.getRandom.bind(this);\r\n    this.changeWeapon = this.changeWeapon.bind(this);\r\n    this.changeStyle = this.changeStyle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRandom(this.props.weapon, this.props.style);\r\n    this.setState({\r\n      charName: this.props.name\r\n    });\r\n  }\r\n  getRandom(weapon, style) {\r\n    const filtered = this.props.data.filter(\r\n      obj => obj.type === weapon && obj.style === style\r\n    );\r\n    const num = this.getRandomInt(0, filtered.length - 1);\r\n    const description = filtered[num];\r\n    this.setState({\r\n      weapon,\r\n      style,\r\n      description\r\n    });\r\n  }\r\n  getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n  changeWeapon(weapon) {\r\n    this.getRandom(weapon, this.state.style);\r\n    this.props.rememberCard({\r\n      id: this.props.id,\r\n      name: this.state.charName,\r\n      weapon: weapon,\r\n      style: this.state.style\r\n    });\r\n  }\r\n  changeStyle(style) {\r\n    this.getRandom(this.state.weapon, style);\r\n    this.props.rememberCard({\r\n      id: this.props.id,\r\n      name: this.state.charName,\r\n      weapon: this.state.weapon,\r\n      style: style\r\n    });\r\n  }\r\n\r\n  saveName = name => {\r\n    this.setState({\r\n      charName: name\r\n    });\r\n    this.props.rememberCard({\r\n      id: this.props.id,\r\n      name,\r\n      weapon: this.state.weapon,\r\n      style: this.state.style\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state || Object.keys(this.state).length < 1) return null;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card__content-wrapper\">\r\n          <div\r\n            className=\"card__btn btn-close\"\r\n            title=\"Delete this card\"\r\n            onClick={() => this.props.removeCard(this.props.id)}\r\n          >\r\n            X\r\n          </div>\r\n          <div\r\n            className=\"card__btn btn-new\"\r\n            title=\"Add another card\"\r\n            onClick={this.props.addCard}\r\n          >\r\n            +\r\n          </div>\r\n          <CardName saveName={this.saveName} name={this.props.name} />\r\n          <p className=\"card__section-heading\"> Weapon type </p>\r\n          <div className=\"card__wrapper weapon-wrapper\">\r\n            <StyleButton\r\n              type=\"weapon\"\r\n              btnStyle=\"blunt\"\r\n              change={this.changeWeapon}\r\n              stateStyle={this.state.weapon}\r\n            />\r\n            <StyleButton\r\n              type=\"weapon\"\r\n              btnStyle=\"piercing\"\r\n              change={this.changeWeapon}\r\n              stateStyle={this.state.weapon}\r\n            />\r\n            <StyleButton\r\n              type=\"weapon\"\r\n              btnStyle=\"slashing\"\r\n              change={this.changeWeapon}\r\n              stateStyle={this.state.weapon}\r\n            />\r\n          </div>\r\n          <p className=\"card__section-heading\"> Fighting style </p>{\" \"}\r\n          <div className=\"card__wrapper style-wrapper\">\r\n            <StyleButton\r\n              type=\"style\"\r\n              btnStyle=\"power\"\r\n              change={this.changeStyle}\r\n              stateStyle={this.state.style}\r\n            />\r\n            <StyleButton\r\n              type=\"style\"\r\n              btnStyle=\"finesse\"\r\n              change={this.changeStyle}\r\n              stateStyle={this.state.style}\r\n            />\r\n            <StyleButton\r\n              type=\"style\"\r\n              btnStyle=\"range\"\r\n              change={this.changeStyle}\r\n              stateStyle={this.state.style}\r\n            />\r\n          </div>\r\n          <div className=\"card__wrapper reload-wrapper\">\r\n            <div\r\n              className=\"card__btn reload-btn\"\r\n              onClick={() =>\r\n                this.getRandom(this.state.weapon, this.state.style)\r\n              }\r\n            >\r\n              Get another card\r\n            </div>\r\n          </div>\r\n          <div className=\"card__wrapper description-wrapper\">\r\n            <p className=\"card__description focus-word\" title=\"Focus word\">\r\n              {this.state.description\r\n                ? this.state.description.word\r\n                : \"I dunno lol\"}\r\n            </p>\r\n            <p className=\"card__description nonlethal\" title=\"Nonlethal strike\">\r\n              {this.state.description\r\n                ? this.state.description.nonlethal\r\n                : \"I dunno lol\"}\r\n            </p>\r\n            <p className=\"card__description lethal\" title=\"Lethal blow\">\r\n              {this.state.description\r\n                ? this.state.description.lethal\r\n                : \"I dunno lol\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Card from \"./Card\";\n\nconst data = require(\"./data/data.json\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.rememberCard = this.rememberCard.bind(this);\n    this.addCard = this.addCard.bind(this);\n    this.removeCard = this.removeCard.bind(this);\n  }\n\n  componentDidMount() {\n    let cards = this.getCards();\n    if (cards.length === 0) {\n      cards.push({\n        name: \"Click to change name\",\n        weapon: \"blunt\",\n        style: \"power\",\n        id: cards.length + 1\n      });\n    }\n    this.setState({\n      cards\n    });\n  }\n\n  rememberCard(card) {\n    let cards = this.getCards();\n    let currentCard = cards.find(c => c.id === card.id);\n    if (!currentCard) {\n      cards.push(card);\n    } else {\n      let currentIndex = cards.findIndex(c => c.id === card.id);\n      cards[currentIndex] = card;\n    }\n    localStorage.cards = JSON.stringify(cards);\n    this.setState({\n      cards\n    });\n  }\n\n  addCard() {\n    let cards = this.getCards();\n    cards.push({\n      name: \"Click to change name\",\n      weapon: \"blunt\",\n      style: \"power\",\n      id: this.generateId()\n    });\n    localStorage.cards = JSON.stringify(cards);\n    this.setState({\n      cards\n    });\n  }\n\n  removeCard(id) {\n    let cards = this.getCards();\n\n    if (cards.length === 1) {\n      cards[0].name = \"Click to change name\";\n      cards[0].weapon = \"blunt\";\n      cards[0].style = \"power\";\n      cards[0].id = this.generateId();\n      localStorage.cards = JSON.stringify(cards);\n      this.setState({\n        cards\n      });\n      return;\n    }\n\n    let currentIndex = cards.findIndex(c => c.id === id);\n    cards.splice(currentIndex, 1);\n    localStorage.cards = JSON.stringify(cards);\n    this.setState({\n      cards\n    });\n  }\n\n  getCards() {\n    let cards;\n    if (!localStorage.cards) {\n      cards = [];\n    } else {\n      cards = JSON.parse(localStorage.cards);\n    }\n    return cards;\n  }\n\n  generateId() {\n    let cards = this.getCards();\n    let id =\n      \"_\" +\n      Math.random()\n        .toString(36)\n        .substr(2, 9);\n    if (cards.find(c => c.id === id)) {\n      return this.generateId();\n    }\n    return id;\n  }\n\n  render() {\n    if (!this.state || !this.state.cards) return null;\n    return (\n      <>\n        <div className=\"App\">\n          {this.state.cards.map(card => (\n            <Card\n              key={card.id}\n              data={data}\n              {...card}\n              rememberCard={this.rememberCard}\n              addCard={this.addCard}\n              removeCard={this.removeCard}\n            />\n          ))}\n        </div>\n        <footer className=\"credits\">\n          Icons made by\n          <a\n            className=\"credits-link\"\n            href=\"https://www.flaticon.com/authors/iconixar\"\n            title=\"iconixar\"\n          >\n            iconixar\n          </a>\n          ,\n          <a\n            className=\"credits-link\"\n            href=\"https://www.flaticon.com/authors/those-icons\"\n            title=\"Those Icons\"\n          >\n            Those Icons\n          </a>\n          ,\n          <a\n            className=\"credits-link\"\n            href=\"https://www.freepik.com/\"\n            title=\"Freepik\"\n          >\n            Freepik\n          </a>\n          ,\n          <a\n            className=\"credits-link\"\n            href=\"https://www.flaticon.com/authors/zlatko-najdenovski\"\n            title=\"Zlatko Najdenovski\"\n          >\n            Zlatko Najdenovski\n          </a>\n          ,\n          <a\n            className=\"credits-link\"\n            href=\"https://www.flaticon.com/authors/bqlqn\"\n            title=\"bqlqn\"\n          >\n            bqlqn\n          </a>\n          from\n          <a\n            className=\"credits-link\"\n            href=\"https://www.flaticon.com/\"\n            title=\"Flaticon\"\n          >\n            www.flaticon.com\n          </a>\n          <br />\n          licensed by\n          <a\n            className=\"credits-link\"\n            href=\"http://creativecommons.org/licenses/by/3.0/\"\n            title=\"Creative Commons BY 3.0\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            CC 3.0 BY\n          </a>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}